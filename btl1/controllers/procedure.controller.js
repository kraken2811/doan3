const jwt = require("jsonwebtoken");
const StoreProcedure = require("../models/procedure.model");
const dotenv = require("dotenv");

dotenv.config();
const SECRET_KEY = process.env.JWT_SECRET || "your_secret_key"; // L·∫•y kh√≥a b√≠ m·∫≠t t·ª´ .env

module.exports = {
    login: (req, res) => {
        const email = req.body.email || req.query.email;
        const password = req.body.password || req.query.password;

        if (!email || !password) {
            return res.status(400).json({ error: "Missing email or password parameter" });
        }

        // Ki·ªÉm tra ƒëƒÉng nh·∫≠p t·ª´ c∆° s·ªü d·ªØ li·ªáu
        StoreProcedure.checkLogin(email, password, (err, result) => {
            if (err) {
                console.error("Error during database query:", err); // Log l·ªói khi truy v·∫•n c∆° s·ªü d·ªØ li·ªáu
                return res.status(500).json({ error: err });
            }

            console.log("Database query result:", result); // Log k·∫øt qu·∫£ truy v·∫•n c∆° s·ªü d·ªØ li·ªáu

            if (result && result.length > 0) {
                const user = result[0]; // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ c∆° s·ªü d·ªØ li·ªáu

                // Ki·ªÉm tra xem vai tr√≤ ng∆∞·ªùi d√πng c√≥ t·ªìn t·∫°i kh√¥ng
                if (!user.vai_tro) {
                    console.error("User does not have a role defined!"); // Log khi kh√¥ng c√≥ vai tr√≤
                    return res.status(500).json({ error: "User role not defined!" });
                }

                // T·∫°o token JWT
                const token = jwt.sign(
                    { id: user.id, email: user.email, role: user.vai_tro }, 
                    SECRET_KEY, 
                    { expiresIn: "2h" }
                );

                // üî• Tr·∫£ v·ªÅ th√¥ng tin user ƒë√∫ng ƒë·ªãnh d·∫°ng
                return res.json({
                    message: "Login successful",
                    token, 
                    user: {
                        id: user.id,
                        username: user.name,
                        email: user.email,
                        fullName: user.ho_ten,
                        phone: user.sdt,
                        role: user.vai_tro
                    }
                });
            } else {
                console.log("Invalid credentials - User not found"); // Log khi kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng
                return res.status(401).json({ message: "Invalid credentials" });
            }
        });
    }
};
